diff --git a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Curl/index.js b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Curl/index.js
index 6732aa9..f81ba56 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Curl/index.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Curl/index.js
@@ -180,6 +180,7 @@ function Curl({ postman, codeSamples }) {
         server,
         auth,
       });
+
       codegen.convert(
         language.language,
         language.variant,
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Execute/makeRequest.js b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Execute/makeRequest.js
index 1693eaa..ae04b50 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Execute/makeRequest.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Execute/makeRequest.js
@@ -38,7 +38,10 @@ async function makeRequest(request, proxy, _body) {
   if (headers) {
     headers.forEach((header) => {
       if (header.key && header.value) {
-        myHeaders.append(header.key, header.value);
+        // myHeaders.append(header.key, header.value);
+        if (header.value !== "multipart/form-data") {
+          myHeaders.append(header.key, header.value);
+        }
       }
     });
   }
@@ -115,6 +118,7 @@ async function makeRequest(request, proxy, _body) {
   // }
 
   const body = request.body?.toJSON();
+
   let myBody = undefined;
   if (body !== undefined && Object.keys(body).length > 0) {
     switch (body.mode) {
@@ -137,8 +141,18 @@ async function makeRequest(request, proxy, _body) {
         myBody = new FormData();
         if (Array.isArray(body.formdata)) {
           for (const data of body.formdata) {
-            if (data.key && data.value) {
-              myBody.append(data.key, data.value);
+            if (data.key === "files") {
+              const filePreview = _body?.content?.files?.value?.content?.preview
+              if (filePreview) {
+                let responseFilePreview = await fetch(filePreview)
+                const filePreviewBlob = await responseFilePreview.blob()
+                myBody.append("files", filePreviewBlob);
+              }
+            } else {
+              if (data.key && data.value) {
+                let value = data.value
+                myBody.append(data.key, value);
+              }
             }
           }
         }
@@ -158,14 +172,20 @@ async function makeRequest(request, proxy, _body) {
     method: request.method,
     headers: myHeaders,
     body: myBody,
+    // mode: "no-cors"
   };
   let finalUrl = request.url.toString();
+
+  console.log('requestOptions', requestOptions)
+  console.log('proxy', proxy)
   if (proxy) {
     // Ensure the proxy ends with a slash.
     let normalizedProxy = proxy.replace(/\/$/, "") + "/";
+    console.log('normalizedProxy', normalizedProxy)
     finalUrl = normalizedProxy + request.url.toString();
+    console.log('finalUrl', finalUrl)
   }
-  return await fetchWithtimeout(finalUrl, requestOptions).then((response) => {
+  return await fetch(finalUrl, requestOptions).then((response) => {
     return response.text();
   });
 }
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/MethodEndpoint/index.js b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/MethodEndpoint/index.js
index 758e870..f652d93 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/MethodEndpoint/index.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/MethodEndpoint/index.js
@@ -29,7 +29,7 @@ function colorForMethod(method) {
       return undefined;
   }
 }
-function MethodEndpoint({ method, path }) {
+function MethodEndpoint({ method, path, fullURL }) {
   return (
     <pre
       className="openapi-method-endpoint"
@@ -45,7 +45,7 @@ function MethodEndpoint({ method, path }) {
         {method.toUpperCase()}
       </span>{" "}
       <span className="openapi-method-endpoint__path">
-        {path.replace(/{([a-z0-9-_]+)}/gi, ":$1")}
+        {fullURL || path.replace(/{([a-z0-9-_]+)}/gi, ":$1")}
       </span>
     </pre>
   );
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Server/index.js b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Server/index.js
index 762d74c..4364958 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Server/index.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/Server/index.js
@@ -17,7 +17,9 @@ function Server() {
   const [isEditing, setIsEditing] = useState(false);
   const value = useTypedSelector((state) => state.server.value);
   const options = useTypedSelector((state) => state.server.options);
+  const pathParams = useTypedSelector((state) => state.params.path);
   const dispatch = useTypedDispatch();
+
   if (options.length <= 0) {
     return null;
   }
@@ -50,6 +52,13 @@ function Server() {
         });
       }
     }
+    if (pathParams && pathParams?.length > 0) {
+      pathParams.forEach(pathParam => {
+        if (pathParam?.value !== undefined && pathParam?.value !== null) {
+          url = url.replace(`{${pathParam.name}}`, String(pathParam.value));
+        }
+      })
+    }
     return (
       <FloatingButton onClick={() => setIsEditing(true)} label="Edit">
         <FormItem label="Base URL">
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/buildPostmanRequest.js b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/buildPostmanRequest.js
index d9ddd20..955de64 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/buildPostmanRequest.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/buildPostmanRequest.js
@@ -70,18 +70,22 @@ function buildCookie(cookieParams) {
 }
 function setHeaders(postman, contentType, accept, cookie, headerParams, other) {
   postman.headers.clear();
-  if (contentType) {
-    postman.addHeader({
-      key: "Content-Type",
-      value: contentType,
-    });
-  }
-  if (accept) {
-    postman.addHeader({
-      key: "Accept",
-      value: accept,
-    });
+
+  // if (contentType) {
+  //   postman.addHeader({
+  //     key: "Content-Type",
+  //     value: contentType,
+  //   });
+  // }
+  if (contentType && contentType !== 'multipart/form-data') {
+    postman.addHeader({ key: "Content-Type", value: contentType });
   }
+  // if (accept) {
+  //   postman.addHeader({
+  //     key: "Accept",
+  //     value: accept,
+  //   });
+  // }
   headerParams.forEach((param) => {
     if (param.value && !Array.isArray(param.value)) {
       postman.addHeader({
@@ -142,14 +146,18 @@ function setBody(clonedPostman, body) {
           if (content.type === "file") {
             return new sdk.FormParam({
               key: key,
-              ...content,
+              value: content.value,
+              src: content.value.src,
+              type: "file"
             });
           }
+
           return new sdk.FormParam({
             key: key,
             value: content.value,
           });
         });
+
       clonedPostman.body.formdata?.assimilate(params, false);
       return;
     }
@@ -206,8 +214,16 @@ function buildPostmanRequest(
     if (variables) {
       Object.keys(variables).forEach((variable) => {
         url = url.replace(`{${variable}}`, variables[variable].default);
+
       });
     }
+    if (pathParams && pathParams?.length > 0) {
+      pathParams.forEach(pathParam => {
+        if (pathParam?.value !== undefined && pathParam?.value !== null) {
+          url = url.replace(`{${pathParam.name}}`, String(pathParam.value));
+        }
+      })
+    }
     clonedPostman.url.host = [url];
   }
   setQueryParams(clonedPostman, queryParams);
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/index.js b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/index.js
index eb13289..6e51775 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/index.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiDemoPanel/index.js
@@ -15,9 +15,10 @@ import SecuritySchemes from "@theme/ApiDemoPanel/SecuritySchemes";
 function ApiDemoPanel({ item, infoPath }) {
   const postman = new sdk.Request(item.postman);
   const { path, method } = item;
+  const fullURL = item?.fullURL ? item.fullURL : ""
   return (
     <div>
-      <MethodEndpoint method={method} path={path} />
+      <MethodEndpoint method={method} path={path} fullURL={fullURL} />
       <SecuritySchemes infoPath={infoPath} />
       <Request item={item} />
       <Response />
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiItem/store.js b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiItem/store.js
index 25b1b0f..35c5878 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiItem/store.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib-next/theme/ApiItem/store.js
@@ -27,12 +27,16 @@ export const createStoreWithState = (preloadedState, middlewares) =>
     reducer: rootReducer,
     preloadedState,
     middleware: (getDefaultMiddleware) =>
-      getDefaultMiddleware().concat(...middlewares),
+      getDefaultMiddleware({
+        serializableCheck: false
+      }).concat(...middlewares),
   });
 export const createStoreWithoutState = (preloadedState, middlewares) =>
   configureStore({
     reducer: rootReducer,
     preloadedState,
     middleware: (getDefaultMiddleware) =>
-      getDefaultMiddleware().concat(...middlewares),
+      getDefaultMiddleware({
+        serializableCheck: false
+      }).concat(...middlewares),
   });
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Curl/index.js b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Curl/index.js
index 5bfb317..2da8049 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Curl/index.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Curl/index.js
@@ -180,6 +180,7 @@ function Curl({
         server,
         auth
       });
+
       _postmanCodeGenerators.default.convert(language.language, language.variant, postmanRequest, language.options, (error, snippet) => {
         if (error) {
           return;
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Execute/makeRequest.js b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Execute/makeRequest.js
index d0ea10a..4fa5ee0 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Execute/makeRequest.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Execute/makeRequest.js
@@ -40,7 +40,10 @@ async function makeRequest(request, proxy, _body) {
   if (headers) {
     headers.forEach(header => {
       if (header.key && header.value) {
-        myHeaders.append(header.key, header.value);
+        // myHeaders.append(header.key, header.value);
+        if (header.value !== "multipart/form-data") {
+          myHeaders.append(header.key, header.value);
+        }
       }
     });
   }
@@ -117,6 +120,8 @@ async function makeRequest(request, proxy, _body) {
   // }
 
   const body = (_request$body = request.body) === null || _request$body === void 0 ? void 0 : _request$body.toJSON();
+
+
   let myBody = undefined;
   if (body !== undefined && Object.keys(body).length > 0) {
     switch (body.mode) {
@@ -143,11 +148,21 @@ async function makeRequest(request, proxy, _body) {
           myBody = new FormData();
           if (Array.isArray(body.formdata)) {
             for (const data of body.formdata) {
+            if (data.key === "files") {
+              const filePreview = _body?.content?.files?.value?.content?.preview
+              if (filePreview) {
+                let responseFilePreview = await fetch(filePreview)
+                const filePreviewBlob = await responseFilePreview.blob()
+                myBody.append("files", filePreviewBlob);
+              }
+            } else {
               if (data.key && data.value) {
-                myBody.append(data.key, data.value);
+                let value = data.value
+                myBody.append(data.key, value);
               }
             }
           }
+          }
           break;
         }
       case "file":
@@ -165,15 +180,21 @@ async function makeRequest(request, proxy, _body) {
   const requestOptions = {
     method: request.method,
     headers: myHeaders,
-    body: myBody
+    body: myBody,
+    // mode: "no-cors"
   };
   let finalUrl = request.url.toString();
+
+  console.log('requestOptions', requestOptions)
+  console.log('proxy', proxy)
   if (proxy) {
     // Ensure the proxy ends with a slash.
     let normalizedProxy = proxy.replace(/\/$/, "") + "/";
+    console.log('normalizedProxy', normalizedProxy)
     finalUrl = normalizedProxy + request.url.toString();
+    console.log('finalUrl', finalUrl)
   }
-  return await fetchWithtimeout(finalUrl, requestOptions).then(response => {
+  return await fetch(finalUrl, requestOptions).then(response => {
     return response.text();
   });
 }
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/MethodEndpoint/index.js b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/MethodEndpoint/index.js
index 13bf3e3..baddc84 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/MethodEndpoint/index.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/MethodEndpoint/index.js
@@ -38,7 +38,8 @@ function colorForMethod(method) {
 }
 function MethodEndpoint({
   method,
-  path
+  path,
+  fullURL
 }) {
   return <pre className="openapi-method-endpoint" style={{
     background: "var(--openapi-card-background-color)",
@@ -48,7 +49,7 @@ function MethodEndpoint({
         {method.toUpperCase()}
       </span>{" "}
       <span className="openapi-method-endpoint__path">
-        {path.replace(/{([a-z0-9-_]+)}/gi, ":$1")}
+        {fullURL || path.replace(/{([a-z0-9-_]+)}/gi, ":$1")}
       </span>
     </pre>;
 }
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Server/index.js b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Server/index.js
index 00bf027..51e3c86 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Server/index.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/Server/index.js
@@ -26,7 +26,9 @@ function Server() {
   const [isEditing, setIsEditing] = (0, _react.useState)(false);
   const value = (0, _hooks.useTypedSelector)(state => state.server.value);
   const options = (0, _hooks.useTypedSelector)(state => state.server.options);
+  const pathParams = (0, _hooks.useTypedSelector)(state => state.params.path);
   const dispatch = (0, _hooks.useTypedDispatch)();
+
   if (options.length <= 0) {
     return null;
   }
@@ -57,6 +59,13 @@ function Server() {
         });
       }
     }
+    if (pathParams && pathParams?.length > 0) {
+      pathParams.forEach(pathParam => {
+        if (pathParam?.value !== undefined && pathParam?.value !== null) {
+          url = url.replace(`{${pathParam.name}}`, String(pathParam.value));
+        }
+      })
+    }
     return <_FloatingButton.default onClick={() => setIsEditing(true)} label="Edit">
         <_FormItem.default label="Base URL">
           <pre style={{
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/buildPostmanRequest.js b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/buildPostmanRequest.js
index dbc3679..fd42bf9 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/buildPostmanRequest.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/buildPostmanRequest.js
@@ -73,18 +73,21 @@ function buildCookie(cookieParams) {
 }
 function setHeaders(postman, contentType, accept, cookie, headerParams, other) {
   postman.headers.clear();
-  if (contentType) {
-    postman.addHeader({
-      key: "Content-Type",
-      value: contentType
-    });
-  }
-  if (accept) {
-    postman.addHeader({
-      key: "Accept",
-      value: accept
-    });
+  // if (contentType) {
+  //   postman.addHeader({
+  //     key: "Content-Type",
+  //     value: contentType
+  //   });
+  // }
+  if (contentType && contentType !== 'multipart/form-data') {
+    postman.addHeader({ key: "Content-Type", value: contentType });
   }
+  // if (accept) {
+  //   postman.addHeader({
+  //     key: "Accept",
+  //     value: accept
+  //   });
+  // }
   headerParams.forEach(param => {
     if (param.value && !Array.isArray(param.value)) {
       postman.addHeader({
@@ -149,12 +152,14 @@ function setBody(clonedPostman, body) {
           if (content.type === "file") {
             return new _postmanCollection.default.FormParam({
               key: key,
-              ...content
+              value: content.value,
+              src: content.value.src,
+              type: "file"
             });
           }
           return new _postmanCollection.default.FormParam({
             key: key,
-            value: content.value
+            value: content.value,
           });
         });
         (_clonedPostman$body$f2 = clonedPostman.body.formdata) === null || _clonedPostman$body$f2 === void 0 ? void 0 : _clonedPostman$body$f2.assimilate(params, false);
@@ -212,6 +217,13 @@ function buildPostmanRequest(postman, {
         url = url.replace(`{${variable}}`, variables[variable].default);
       });
     }
+    if (pathParams && pathParams?.length > 0) {
+      pathParams.forEach(pathParam => {
+        if (pathParam?.value !== undefined && pathParam?.value !== null) {
+          url = url.replace(`{${pathParam.name}}`, String(pathParam.value));
+        }
+      })
+    }
     clonedPostman.url.host = [url];
   }
   setQueryParams(clonedPostman, queryParams);
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/index.js b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/index.js
index 929b946..b43f4c7 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/index.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiDemoPanel/index.js
@@ -27,10 +27,11 @@ function ApiDemoPanel({
   const postman = new _postmanCollection.default.Request(item.postman);
   const {
     path,
-    method
+    method,
+    fullURL
   } = item;
   return <div>
-      <_MethodEndpoint.default method={method} path={path} />
+      <_MethodEndpoint.default method={method} path={path} fullURL={fullURL} />
       <_SecuritySchemes.default infoPath={infoPath} />
       <_Request.default item={item} />
       <_Response.default />
diff --git a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiItem/store.js b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiItem/store.js
index 52fdc29..05556a6 100644
--- a/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiItem/store.js
+++ b/node_modules/docusaurus-theme-openapi-docs/lib/theme/ApiItem/store.js
@@ -32,12 +32,12 @@ const rootReducer = (0, _toolkit.combineReducers)({
 const createStoreWithState = (preloadedState, middlewares) => (0, _toolkit.configureStore)({
   reducer: rootReducer,
   preloadedState,
-  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(...middlewares)
+  middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }).concat(...middlewares)
 });
 exports.createStoreWithState = createStoreWithState;
 const createStoreWithoutState = (preloadedState, middlewares) => (0, _toolkit.configureStore)({
   reducer: rootReducer,
   preloadedState,
-  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(...middlewares)
+  middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }).concat(...middlewares)
 });
 exports.createStoreWithoutState = createStoreWithoutState;
\ No newline at end of file
diff --git a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Curl/index.tsx b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Curl/index.tsx
index eafaa89..3dea8d8 100644
--- a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Curl/index.tsx
+++ b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Curl/index.tsx
@@ -144,7 +144,6 @@ function Curl({ postman, codeSamples }: Props) {
   // TODO: match theme for vscode.
 
   const { siteConfig } = useDocusaurusContext();
-
   const contentType = useTypedSelector((state: any) => state.contentType.value);
   const accept = useTypedSelector((state: any) => state.accept.value);
   const server = useTypedSelector((state: any) => state.server.value);
diff --git a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Execute/index.tsx b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Execute/index.tsx
index 36bf4f0..7283bcc 100644
--- a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Execute/index.tsx
+++ b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Execute/index.tsx
@@ -138,7 +138,7 @@ function Execute({ postman, proxy }: Props) {
           Send API Request
         </button>
         <Modal
-          isOpen={modalIsOpen}
+          isOpen={modalIsOpen}มิอ แจีัะเดกแหปผงใฝใม
           onRequestClose={closeModal}
           style={customStyles}
           contentLabel="Terms of Use"
diff --git a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Execute/makeRequest.ts b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Execute/makeRequest.ts
index ed991be..a26d8ce 100644
--- a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Execute/makeRequest.ts
+++ b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Execute/makeRequest.ts
@@ -55,7 +55,10 @@ async function makeRequest(
   if (headers) {
     headers.forEach((header: any) => {
       if (header.key && header.value) {
-        myHeaders.append(header.key, header.value);
+        // myHeaders.append(header.key, header.value);
+        if (header.value !== "multipart/form-data") {
+          myHeaders.append(header.key, header.value);
+        }
       }
     });
   }
@@ -155,8 +158,18 @@ async function makeRequest(
         myBody = new FormData();
         if (Array.isArray(body.formdata)) {
           for (const data of body.formdata) {
-            if (data.key && data.value) {
-              myBody.append(data.key, data.value);
+            if (data.key === "files") {
+              const filePreview = _body?.content?.files?.value?.content?.preview
+              if (filePreview) {
+                let responseFilePreview = await fetch(filePreview)
+                const filePreviewBlob = await responseFilePreview.blob()
+                myBody.append("files", filePreviewBlob);
+              }
+            } else {
+              if (data.key && data.value) {
+                let value = data.value
+                myBody.append(data.key, value);
+              }
             }
           }
         }
@@ -177,16 +190,22 @@ async function makeRequest(
     method: request.method,
     headers: myHeaders,
     body: myBody,
+    // mode: "no-cors"
   };
 
   let finalUrl = request.url.toString();
+
+  console.log('requestOptions', requestOptions)
+  console.log('proxy', proxy)
   if (proxy) {
     // Ensure the proxy ends with a slash.
     let normalizedProxy = proxy.replace(/\/$/, "") + "/";
+    console.log('normalizedProxy', normalizedProxy)
     finalUrl = normalizedProxy + request.url.toString();
+    console.log('finalUrl', finalUrl)
   }
 
-  return await fetchWithtimeout(finalUrl, requestOptions).then(
+  return await fetch(finalUrl, requestOptions).then(
     (response: any) => {
       return response.text();
     }
diff --git a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/MethodEndpoint/index.tsx b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/MethodEndpoint/index.tsx
index fb14cc2..42f72f5 100644
--- a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/MethodEndpoint/index.tsx
+++ b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/MethodEndpoint/index.tsx
@@ -35,9 +35,10 @@ function colorForMethod(method: string) {
 export interface Props {
   method: string;
   path: string;
+  fullURL?: string;
 }
 
-function MethodEndpoint({ method, path }: Props) {
+function MethodEndpoint({ method, path, fullURL }: Props) {
   return (
     <pre
       className="openapi-method-endpoint"
@@ -53,7 +54,7 @@ function MethodEndpoint({ method, path }: Props) {
         {method.toUpperCase()}
       </span>{" "}
       <span className="openapi-method-endpoint__path">
-        {path.replace(/{([a-z0-9-_]+)}/gi, ":$1")}
+        {fullURL || path.replace(/{([a-z0-9-_]+)}/gi, ":$1")}
       </span>
     </pre>
   );
diff --git a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Server/index.tsx b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Server/index.tsx
index 2ada878..b6407b8 100644
--- a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Server/index.tsx
+++ b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/Server/index.tsx
@@ -20,6 +20,7 @@ function Server() {
   const [isEditing, setIsEditing] = useState(false);
   const value = useTypedSelector((state: any) => state.server.value);
   const options = useTypedSelector((state: any) => state.server.options);
+  const pathParams = useTypedDispatch((state: any) => state.params.path)
   const dispatch = useTypedDispatch();
 
   if (options.length <= 0) {
@@ -57,6 +58,13 @@ function Server() {
         });
       }
     }
+    if (pathParams && pathParams?.length > 0) {
+      pathParams.forEach((pathParam: any) => {
+        if (pathParam?.value !== undefined && pathParam?.value !== null) {
+          url = url.replace(`{${pathParam.name}}`, String(pathParam.value));
+        }
+      })
+    }
     return (
       <FloatingButton onClick={() => setIsEditing(true)} label="Edit">
         <FormItem label="Base URL">
diff --git a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/buildPostmanRequest.ts b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/buildPostmanRequest.ts
index 7fda844..c78b86a 100644
--- a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/buildPostmanRequest.ts
+++ b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/buildPostmanRequest.ts
@@ -95,12 +95,19 @@ function setHeaders(
   other: { key: string; value: string }[]
 ) {
   postman.headers.clear();
-  if (contentType) {
+
+  // if (contentType) {
+  //   postman.addHeader({
+  //     key: "Content-Type",
+  //     value: contentType,
+  //   });
+  // }
+  if (contentType && contentType !== 'multipart/form-data') {
     postman.addHeader({ key: "Content-Type", value: contentType });
   }
-  if (accept) {
-    postman.addHeader({ key: "Accept", value: accept });
-  }
+  // if (accept) {
+  //   postman.addHeader({ key: "Accept", value: accept });
+  // }
   headerParams.forEach((param) => {
     if (param.value && !Array.isArray(param.value)) {
       postman.addHeader({ key: param.name, value: param.value });
@@ -156,13 +163,15 @@ function setBody(clonedPostman: sdk.Request, body: Body) {
         .filter((entry): entry is [string, NonNullable<Content>] => !!entry[1])
         .map(([key, content]) => {
           if (content.type === "file") {
-            return new sdk.FormParam({ key: key, ...content });
+            return new sdk.FormParam({ key: key, value: content.value, src: content.value.src, type: "file" });
           }
+
           return new sdk.FormParam({ key: key, value: content.value });
         });
       clonedPostman.body.formdata?.assimilate(params, false);
       return;
     }
+
     case "urlencoded": {
       clonedPostman.body.urlencoded?.clear();
       if (body.type !== "form") {
@@ -228,6 +237,13 @@ function buildPostmanRequest(
         url = url.replace(`{${variable}}`, variables[variable].default);
       });
     }
+    if (pathParams && pathParams?.length > 0) {
+      pathParams.forEach(pathParam => {
+        if (pathParam?.value !== undefined && pathParam?.value !== null) {
+          url = url.replace(`{${pathParam.name}}`, String(pathParam.value));
+        }
+      })
+    }
     clonedPostman.url.host = [url];
   }
 
diff --git a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/index.tsx b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/index.tsx
index aa45da3..f15835c 100644
--- a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/index.tsx
+++ b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiDemoPanel/index.tsx
@@ -24,10 +24,11 @@ function ApiDemoPanel({
 }) {
   const postman = new sdk.Request(item.postman);
   const { path, method } = item;
+  const fullURL = item?.fullURL ? item.fullURL : ""
 
   return (
     <div>
-      <MethodEndpoint method={method} path={path} />
+      <MethodEndpoint method={method} path={path} fullURL={fullURL} />
       <SecuritySchemes infoPath={infoPath} />
       <Request item={item} />
       <Response />
diff --git a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiItem/store.ts b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiItem/store.ts
index a2a822c..f97c68f 100644
--- a/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiItem/store.ts
+++ b/node_modules/docusaurus-theme-openapi-docs/src/theme/ApiItem/store.ts
@@ -34,7 +34,9 @@ export const createStoreWithState = (
     reducer: rootReducer,
     preloadedState,
     middleware: (getDefaultMiddleware) =>
-      getDefaultMiddleware().concat(...middlewares),
+      getDefaultMiddleware({
+        serializableCheck: false
+      }).concat(...middlewares),
   });
 
 export const createStoreWithoutState = (
@@ -45,7 +47,9 @@ export const createStoreWithoutState = (
     reducer: rootReducer,
     preloadedState,
     middleware: (getDefaultMiddleware) =>
-      getDefaultMiddleware().concat(...middlewares),
+      getDefaultMiddleware({
+        serializableCheck: false
+      }).concat(...middlewares),
   });
 
 export type AppDispatch = ReturnType<typeof createStoreWithState>["dispatch"];
