"use strict";(self.webpackChunkvisai_inference_api_documentation=self.webpackChunkvisai_inference_api_documentation||[]).push([[2552],{22130:(e,t,n)=>{n.d(t,{Z:()=>i});var o,a=n(67294);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},r.apply(this,arguments)}const i=e=>{let{title:t,titleId:n,...i}=e;return a.createElement("svg",r({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},i),t?a.createElement("title",{id:n},t):null,o||(o=a.createElement("path",{d:"M21 3H3m15 10-6-6m0 0-6 6m6-6v14",stroke:"#000",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"})))}},64074:(e,t,n)=>{n.d(t,{Z:()=>m});var o=n(67294),a=n(86010),r=n(39960);const i="cardContainer_MaJ8",s="iconContainer_tV4r",l="icon_Xr9C",c="readMore_acgC",u="title_R7ni",d="description_ca38";function m(e){let{Svg:t,title:n,description:m,href:h}=e;return o.createElement(r.Z,{to:h,className:(0,a.Z)("",i)},o.createElement("div",null,t&&o.createElement("div",{className:s},o.createElement(t,{className:l,role:"img"})),o.createElement("span",{className:(0,a.Z)("",u)},n),o.createElement("p",{className:(0,a.Z)("",d)},m)),o.createElement("div",{className:c},"Read more"))}},68853:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(67294),a=n(86010),r=n(39960);const i={longRunCardContainer:"longRunCardContainer_nttB"};function s(e){let{title:t,href:n}=e;return o.createElement(r.Z,{to:n,className:(0,a.Z)("",i.longRunCardContainer)},o.createElement("span",{className:(0,a.Z)("",i.longRunTitle)},t),o.createElement("svg",{width:"20",height:"20",viewBox:"0 0 20 20",fill:"none",xmlns:"http://www.w3.org/2000/svg"},o.createElement("g",{id:"arrow-right"},o.createElement("path",{id:"Icon",d:"M4.16699 10.0001H15.8337M15.8337 10.0001L10.0003 4.16675M15.8337 10.0001L10.0003 15.8334",stroke:"currentColor",strokeWidth:"1.66667",strokeLinecap:"round",strokeLinejoin:"round"}))))}},50022:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var o=n(87462),a=(n(67294),n(3905)),r=n(64074),i=n(68853);const s={id:"asynchronous",title:"Asynchronous API",custom_edit_url:null},l="Asynchronous - OCR Documentation",c={unversionedId:"ai-marketplace/ocr-documentation/asynchronous",id:"ai-marketplace/ocr-documentation/asynchronous",title:"Asynchronous API",description:"Asynchronous Methods",source:"@site/docs/ai-marketplace/ocr-documentation/asynchronous.mdx",sourceDirName:"ai-marketplace/ocr-documentation",slug:"/ai-marketplace/ocr-documentation/asynchronous",permalink:"/inference-api-documentation/docs/ai-marketplace/ocr-documentation/asynchronous",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"asynchronous",title:"Asynchronous API",custom_edit_url:null}},u={},d=[{value:"Asynchronous Methods",id:"asynchronous-methods",level:2},{value:"Get Job Status by Job ID",id:"get-job-status-by-job-id",level:2},{value:"List All Jobs",id:"list-all-jobs",level:2},{value:"Cancel Job",id:"cancel-job",level:2}],m={toc:d};function h(e){let{components:t,...s}=e;return(0,a.kt)("wrapper",(0,o.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"asynchronous---ocr-documentation"},"Asynchronous - OCR Documentation"),(0,a.kt)("h2",{id:"asynchronous-methods"},"Asynchronous Methods"),(0,a.kt)("p",null,"Our Asynchronous Inference API allows you to create inference jobs by uploading a file. After creating a job, you will receive a ",(0,a.kt)("inlineCode",{parentName:"p"},"job_id")," to track its status and retrieve the result."),(0,a.kt)("section",{style:{display:"grid",gap:"1rem",gridTemplateColumns:"repeat(auto-fill,minmax(320px, 1fr))"}},(0,a.kt)(r.Z,{Svg:n(22130).Z,title:"Upload files",description:"Upload files directly to start an inference job. Once the file is processed, you'll receive a job_id to track the job.",href:"/docs/ai-marketplace/ocr-documentation/asynchronous-api/uploading-file",mdxType:"AsynchronousCard"})),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"get-job-status-by-job-id"},"Get Job Status by Job ID"),(0,a.kt)("p",null,"Use the Job API to check the status of your inference jobs and retrieve the results once processing is complete."),(0,a.kt)(i.Z,{title:"Get Job Status API",href:"/docs/ai-marketplace/ocr-documentation/asynchronous-api/get-job-status",mdxType:"LinkCard"}),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"list-all-jobs"},"List All Jobs"),(0,a.kt)("p",null,"Retrieve a list of all inference jobs that have been submitted."),(0,a.kt)(i.Z,{title:"List All Jobs",href:"/docs/ai-marketplace/ocr-documentation/asynchronous-api/list-jobs",mdxType:"LinkCard"}),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"cancel-job"},"Cancel Job"),(0,a.kt)("p",null,"API allows you to cancel an inference job by submitting its job_id in the request body."),(0,a.kt)(i.Z,{title:"Cancel Job",href:"/docs/ai-marketplace/ocr-documentation/asynchronous-api/cancel-job",mdxType:"LinkCard"}))}h.isMDXComponent=!0}}]);